{
    "swagger": "2.0",
    "info": {
        "description": "API for personal server.",
        "title": "grp@server",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/auth": {
            "post": {
                "description": "Validate the user and the password and return a temp jwt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Auth the user",
                "parameters": [
                    {
                        "description": "User Credentials",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authSimple.UserAuth"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authSimple.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/authSimple.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/master": {
            "post": {
                "description": "Validate the master_password sent by the user and return a temp jwt with more duration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Auth and verify the master_password of the user",
                "parameters": [
                    {
                        "description": "User token and master_password",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authMaster.UserAuthMaster"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authMaster.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/authMaster.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/otp": {
            "post": {
                "description": "This route is called when the user wants to change a sensitive information, it sends an otp code for the user email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Send otp code",
                "parameters": [
                    {
                        "description": "User token in headers",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authOtp.UserAuthOtp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authOtp.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/authOtp.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/secret": {
            "post": {
                "description": "Validate the secret_code sent by the user and return a temp jwt with more duration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Auth and verify the secret_code of the user",
                "parameters": [
                    {
                        "description": "User token and secret_code",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authSecret.UserAuthSecret"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authSecret.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/authSecret.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chat": {
            "get": {
                "description": "Get all messages with the header token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Get all messages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/getMessages.Message"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/getMessages.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a message with the request body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Add a message",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addMessage.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/addMessage.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/addMessage.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chat/{id}": {
            "delete": {
                "description": "Delete a message with the header token and id in path",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Delete a message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id of message",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/deleteMessage.SucessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/deleteMessage.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/download": {
            "get": {
                "description": "Return a PRESIGNED URL for Download of a file with the query id and ext, valid for files and ebooks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "download"
                ],
                "summary": "Download a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id file",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "extension file",
                        "name": "ext",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core_api_download_downloadFile.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/core_api_download_downloadFile.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ebooks": {
            "get": {
                "description": "Get all ebooks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ebook"
                ],
                "summary": "Get all ebooks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/getEbooks.Ebook"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/getEbooks.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a ebook with the request body",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ebook"
                ],
                "summary": "Add a ebook",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Request body",
                        "name": "ebook",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request body",
                        "name": "size",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/addEbook.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/addEbook.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ebooks/{id}": {
            "get": {
                "description": "Get a ebook with the request body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ebook"
                ],
                "summary": "Get a ebook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ebook id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/getEbooks.Ebook"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/getEbooks.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a ebook with the request body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ebook"
                ],
                "summary": "Delete a ebook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ebook id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/getEbooks.Ebook"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/getEbooks.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/files": {
            "get": {
                "description": "Get a files with the request body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Get a files",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/getFiles.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/getFiles.Files"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/getFiles.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a file with the request body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Add a file",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addFile.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/addFile.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/addFile.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a file with the request body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Delete a file",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/deleteFile.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/deleteFile.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/deleteFile.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/files/exists": {
            "get": {
                "description": "Check if a file exists with the request body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Check if a file exists",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/exists.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/exists.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/exists.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/files/one": {
            "get": {
                "description": "Get a file with the request body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Get a file",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/getFile.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/getFile.Files"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/getFile.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check server health",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Check server health",
                "responses": {}
            }
        },
        "/logs": {
            "get": {
                "description": "Get all logs with no params",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get all logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "admin token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/getlogs.Logs"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/getlogs.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/metrics": {
            "get": {
                "description": "Retrieve metrics for a user using their authentication token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Retrieve metrics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/getMetrics.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/getMetrics.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/getMetrics.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/passwords": {
            "get": {
                "description": "Retrieve all passwords associated with the user, requires a username in the header",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "passwords"
                ],
                "summary": "Get user's passwords",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/getPwds.Passwords"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/getPwds.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new password with a random password, this endpoint require a username in the header",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "passwords"
                ],
                "summary": "Create a new password",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createPwd.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/createPwd.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/createPwd.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/passwords/{id}": {
            "get": {
                "description": "Get a password with the id in the path, this endpoint require a username in the header",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "passwords"
                ],
                "summary": "Get a password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Password id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/getPwd.Passwords"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/getPwd.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a password with the id in the path, this endpoint require a username in the header",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "passwords"
                ],
                "summary": "Delete a password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Password id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/deletePwd.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/deletePwd.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "description": "Get all tags with the header token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Get all tags",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/getTags.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tags/:tag": {
            "get": {
                "description": "Get all domain with relationship with the user tags from a user with the header token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Get all domains by tags from a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tag name",
                        "name": "tag",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/getTag.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/getTag.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "description": "Get all tasks from a user with token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Get all tasks from a user",
                "parameters": [
                    {
                        "description": "Token in headers",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/listTasks.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/listTasks.TasksList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/listTasks.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a task with the request body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Add a task",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addTask.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/addTask.Tasks"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/addTask.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tasks/:id": {
            "get": {
                "description": "Get a task with the url id and token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Get a task",
                "parameters": [
                    {
                        "description": "url id and token",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/getTask.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/getTask.Tasks"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/getTask.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a task with the url id and token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Delete a task",
                "parameters": [
                    {
                        "description": "url id and token",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/deleteTask.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/deleteTask.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/deleteTask.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Change status task with the request body and url id and token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Change status task",
                "parameters": [
                    {
                        "description": "url id and token",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/changeStatus.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/changeStatus.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/changeStatus.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Create a user with the request body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create a user",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createUser.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/createUser.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/createUser.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/avatar_url": {
            "patch": {
                "description": "Update a user avatar with the request body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update a user avatar",
                "parameters": [
                    {
                        "description": "avatar url in body and token in headers",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateAvatarUrl.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/updateAvatarUrl.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/updateAvatarUrl.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/email": {
            "patch": {
                "description": "Update a user email with the request body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update a user email",
                "parameters": [
                    {
                        "description": "email in body and token in headers",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateEmail.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/updateEmail.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/updateEmail.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/master": {
            "patch": {
                "description": "Update a user master password with the request body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update a user master password",
                "parameters": [
                    {
                        "description": "master password in body and token in headers",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateMasterPassword.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/updateMasterPassword.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/updateMasterPassword.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/password": {
            "patch": {
                "description": "Update a user password with the request body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update a user password",
                "parameters": [
                    {
                        "description": "password in body and token in headers",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updatePassword.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/updatePassword.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/updatePassword.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/theme": {
            "patch": {
                "description": "Update a user Theme with the request body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update a user Theme",
                "parameters": [
                    {
                        "description": "Theme in body and token in headers",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateTheme.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/updateTheme.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/updateTheme.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/type": {
            "patch": {
                "description": "Update a user Type verification with the request body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update a user Type verification",
                "parameters": [
                    {
                        "description": "Type verification in body and token in headers",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateTypeVerification.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/updateTypeVerification.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/updateTypeVerification.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "addEbook.Ebook": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "extension": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pk": {
                    "type": "string"
                },
                "size": {
                    "type": "number"
                },
                "sk": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "addEbook.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "addEbook.Response": {
            "type": "object",
            "properties": {
                "ebook": {
                    "$ref": "#/definitions/addEbook.Ebook"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "addFile.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "addFile.Files": {
            "type": "object",
            "properties": {
                "extension": {
                    "type": "string"
                },
                "filename": {
                    "type": "string"
                },
                "pk": {
                    "type": "string"
                },
                "sk": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addFile.Version"
                    }
                }
            }
        },
        "addFile.FormData": {
            "type": "object"
        },
        "addFile.Request": {
            "type": "object",
            "properties": {
                "file": {
                    "$ref": "#/definitions/addFile.FormData"
                },
                "filename": {
                    "type": "string"
                },
                "size": {
                    "type": "number"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "addFile.Response": {
            "type": "object",
            "properties": {
                "file": {
                    "$ref": "#/definitions/addFile.Files"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "addFile.Version": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_latest": {
                    "type": "boolean"
                },
                "size": {
                    "type": "number"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "addMessage.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "addMessage.Request": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "size": {
                    "type": "number"
                }
            }
        },
        "addMessage.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "addTask.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "addTask.Tasks": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "pk": {
                    "type": "string"
                },
                "size": {
                    "type": "number"
                },
                "sk": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "addTask.UserRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "size": {
                    "type": "number"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "authMaster.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "authMaster.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "authMaster.UserAuthMaster": {
            "type": "object",
            "properties": {
                "master_password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "authOtp.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "authOtp.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "authOtp.UserAuthOtp": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "authSecret.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "authSecret.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "authSecret.UserAuthSecret": {
            "type": "object",
            "properties": {
                "secret_code": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "authSimple.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "authSimple.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "authSimple.UserAuth": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "changeStatus.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "changeStatus.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "changeStatus.UserRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "core_api_download_downloadFile.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "core_api_download_downloadFile.SuccessResponse": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "createPwd.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "createPwd.Params": {
            "type": "object",
            "properties": {
                "digits": {
                    "type": "boolean"
                },
                "length": {
                    "type": "integer"
                },
                "lowercase_letters": {
                    "type": "boolean"
                },
                "special_characters": {
                    "type": "boolean"
                },
                "uppercase_letters": {
                    "type": "boolean"
                }
            }
        },
        "createPwd.Request": {
            "type": "object",
            "properties": {
                "identifier": {
                    "type": "string"
                },
                "master": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/createPwd.Params"
                },
                "password": {
                    "type": "string"
                },
                "size": {
                    "type": "number"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "createPwd.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "createUser.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "createUser.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "createUser.UserRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "extra_verification": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "theme_preferences": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "deleteFile.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "deleteFile.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "deleteFile.UserRequest": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "deleteMessage.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "deleteMessage.SucessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "deletePwd.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "deletePwd.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "deleteTask.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "deleteTask.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "deleteTask.UserRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "exists.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "exists.SuccessResponse": {
            "type": "object",
            "properties": {
                "exists": {
                    "type": "boolean"
                }
            }
        },
        "exists.UserRequest": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "getEbooks.Ebook": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "extension": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "number"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "getEbooks.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "getFile.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "getFile.Files": {
            "type": "object",
            "properties": {
                "extension": {
                    "type": "string"
                },
                "filename": {
                    "type": "string"
                },
                "pk": {
                    "type": "string"
                },
                "sk": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/getFile.Version"
                    }
                }
            }
        },
        "getFile.UserRequest": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "getFile.Version": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_latest": {
                    "type": "boolean"
                },
                "size": {
                    "type": "number"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "getFiles.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "getFiles.Files": {
            "type": "object",
            "properties": {
                "extension": {
                    "type": "string"
                },
                "filename": {
                    "type": "string"
                },
                "pk": {
                    "type": "string"
                },
                "sk": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/getFiles.Version"
                    }
                }
            }
        },
        "getFiles.UserRequest": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "getFiles.Version": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_latest": {
                    "type": "boolean"
                },
                "size": {
                    "type": "number"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "getMessages.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "getMessages.Message": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "hour": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "getMetrics.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "getMetrics.Response": {
            "type": "object",
            "properties": {
                "files_per_extension": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "records_per_domain": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "storage_per_domain": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "storage_per_type": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                }
            }
        },
        "getPwd.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "getPwd.Passwords": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "size": {
                    "type": "number"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "getPwds.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "getPwds.Passwords": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "size": {
                    "type": "number"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "getTag.Ebook": {
            "type": "object"
        },
        "getTag.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "getTag.Files": {
            "type": "object"
        },
        "getTag.Passwords": {
            "type": "object"
        },
        "getTag.SuccessResponse": {
            "type": "object",
            "properties": {
                "ebooks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/getTag.Ebook"
                    }
                },
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/getTag.Files"
                    }
                },
                "passwords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/getTag.Passwords"
                    }
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/getTag.Tasks"
                    }
                }
            }
        },
        "getTag.Tasks": {
            "type": "object"
        },
        "getTags.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "getTask.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "getTask.Tasks": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "pk": {
                    "type": "string"
                },
                "size": {
                    "type": "number"
                },
                "sk": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "getTask.UserRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "getlogs.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "getlogs.Logs": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "level": {
                    "type": "string"
                },
                "log_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "metadata": {
                    "type": "string"
                },
                "operation": {
                    "type": "string"
                },
                "pk": {
                    "type": "string"
                },
                "sk": {
                    "type": "string"
                },
                "stack_trace": {
                    "type": "string"
                },
                "status_code": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "listTasks.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "listTasks.Tasks": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "listTasks.TasksList": {
            "type": "object",
            "properties": {
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/listTasks.Tasks"
                    }
                }
            }
        },
        "listTasks.UserRequest": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "updateAvatarUrl.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "updateAvatarUrl.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "updateAvatarUrl.UserRequest": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                }
            }
        },
        "updateEmail.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "updateEmail.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "updateEmail.UserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "updateMasterPassword.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "updateMasterPassword.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "updateMasterPassword.UserRequest": {
            "type": "object",
            "properties": {
                "master_password": {
                    "type": "string"
                }
            }
        },
        "updatePassword.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "updatePassword.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "updatePassword.UserRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "updateTheme.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "updateTheme.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "updateTheme.UserRequest": {
            "type": "object",
            "properties": {
                "theme": {
                    "type": "string"
                }
            }
        },
        "updateTypeVerification.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "updateTypeVerification.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "updateTypeVerification.UserRequest": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        }
    }
}